---
#emailservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.8.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 8080
---
#recommendationservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.8.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
#productcatalogservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.8.0
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 3550
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 3550
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - protocol: TCP
    port: 3550
    targetPort: 3550
---
# paymentservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.8.0
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 50051
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051
---
# currencyservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/currencyservice:v0.8.0
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 7000
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 7000
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - protocol: TCP
    port: 7000
    targetPort: 7000
---
# shippingservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/shippingservice:v0.8.0
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 50051
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - protocol: TCP
    port: 50051
    targetPort: 50051
---
# adservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/adservice:v0.8.0
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 9555
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 5
          grpc:
            port: 9555
        resources:
          requests:
            cpu: "200m"
            memory: "180Mi"
          limits:
            cpu: "300m"
            memory: "300Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - protocol: TCP
    port: 9555
    targetPort: 9555
---
# cartservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.8.0
        ports:
        - containerPort: 7070
        env:
        - name: PORT
          value: "7070"
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 7070
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 7070
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - protocol: TCP
    port: 7070
    targetPort: 7070
---
# redis-cart
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  namespace: production
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            cpu: "70m"
            memory: "200Mi"
          limits:
            cpu: "125m"
            memory: "300Mi"
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
---
# checkoutservice
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.8.0
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: EMAIL_SERVICE_ADDR
          value: "emailservice:5000"
        - name: PAYMENT_SERVICE_ADDR
          value: "paymentservice:50551"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 5050
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          grpc:
            port: 5050
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: production
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - protocol: TCP
    port: 5050
    targetPort: 5050
---
# frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: service
        image: gcr.io/google-samples/microservices-demo/frontend:v0.8.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: production
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080